---
import { getImage } from "astro:assets";
import { OG, SEO, SITE } from "@data/constants";
import faviconSvgSrc from "@images/icon.svg";
import faviconSrc from "@images/icon.png";

interface Props {
  meta?: string;
  structuredData?: object;
  ogTitle?: string;
  ogDescription?: string
  title?: string
}

const defaultProps = {
  meta: SITE.description,
  structuredData: SEO.structuredData,
};

const {
  meta = defaultProps.meta,
  structuredData = defaultProps.structuredData,
  ogTitle = OG.title,
  ogDescription = OG.description,
  title = SITE.title
} = Astro.props as Props;

const URL = `${Astro.site}`; 
const author = SITE.author;
const canonical = Astro.url.href;
const socialImageRes = await getImage({
  src: OG.image,
  width: 1200,
  height: 600,
});
const socialImage = Astro.url.origin + socialImageRes.src;

const languages: { [key: string]: string } = {
  en: "",
  fr: "fr",
};

function createHref(prefix: string, path: string): string {
  const hasPrefix = path.startsWith(`/${prefix}/`);

  const basePath = hasPrefix ? path : `/${prefix}${path}`;
  const normalizedBasePath = basePath.replace(/\/\/+/g, "/");
  return `${URL.slice(0, -1)}${normalizedBasePath}`;
}

const fullPath: string = Astro.url.pathname;

const alternateLanguageLinks: string = Object.entries(languages)
  .map(([lang, prefix]: [string, string]) => {
    const basePath: string =
      lang === "en" ? fullPath.replace(/^\/fr\//, "/") : fullPath;

    const href: string = createHref( prefix, basePath);

    return `<link rel="alternate" hreflang="${lang}" href="${href}" />`;
  })
  .join("\n");

// Generate and optimize the favicon images
const faviconSvg = await getImage({
  src: faviconSvgSrc,
  format: "svg",
});

const appleTouchIcon = await getImage({
  src: faviconSrc,
  width: 180,
  height: 180,
  format: "png",
});
---
{
  structuredData && (
    <script is:inline
      type="application/ld+json"
      set:html={JSON.stringify(structuredData)}
    />
  )
}

<meta charset="utf-8" />
<title>{title ?? 'defaulttitle'}</title>
<meta content={meta} name="description" />
<meta name="web_author" content={author} />
<meta
  name="viewport"
  content="width=device-width, initial-scale=1.0, maximum-scale=5.0, minimum-scale=1.0"
/>
<meta http-equiv="X-UA-Compatible" content="ie=edge" />
<link rel="canonical" href={canonical} />
<Fragment set:html={alternateLanguageLinks} />
<meta property="og:locale" content="en_US" />
<meta property="og:url" content={URL} />
<meta property="og:type" content="website" />
<meta property="og:title" content={ogTitle} />
<meta property="og:site_name" content={SITE.title} />
<meta property="og:description" content={ogDescription} />
<meta property="og:image" content={socialImage} />
<meta content="1200" property="og:image:width" />
<meta content="600" property="og:image:height" />
<meta content="image/png" property="og:image:type" />
<meta name="twitter:card" content="summary_large_image" />
<meta property="twitter:domain" content={URL} />
<meta property="twitter:url" content={URL} />
<meta name="twitter:title" content={ogTitle} />
<meta name="twitter:description" content={ogDescription} />
<meta name="twitter:image" content={socialImage} />
<link rel="manifest" href="/manifest.json" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link href="/favicon.ico" rel="icon" sizes="any" type="image/x-icon" />
<link href={faviconSvg.src} rel="icon" type="image/svg+xml" sizes="any" />
<meta name="mobile-web-app-capable" content="yes" />
<link href={appleTouchIcon.src} rel="apple-touch-icon" />
<link href={appleTouchIcon.src} rel="shortcut icon" />
<meta name="theme-color" content="#facc15" />

